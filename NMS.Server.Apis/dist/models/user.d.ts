import { UserMetaDataResponseDTO, AddNewsRequestDTO, ArchivalMediaRequestDTO, AssignmentByUserRequestDTO, GuestAssignmentByUserRequestDTO, UpdateAssignmentRequestDTO, GetChatRequestDTO, AddChatRequestDTO, UpdateGuestAssignmentRequestDTO, AddEventRequestDTO, GetUserNotificationRequestDTO, GetUserPointsDetailRequestDTO } from './../dtos/index';
import { BaseModel } from "./base-model";
import { Response } from "express";
export declare class User extends BaseModel {
    constructor(IsActive?: boolean, IsDeleted?: boolean, CreatedAt?: string, CreatedBy?: string, ModifiedAt?: string, ModifiedBy?: string);
    Id?: number;
    UserName?: string;
    Password?: string;
    FullName?: string;
    FirstName?: string;
    Designation?: string;
    FullNameUrdu?: string;
    FirstNameUrdu?: string;
    DesignationUrdu?: string;
    ProfilePicture?: string;
    LocationTitle?: string;
    Lat?: string;
    Long?: string;
    JobRoleId?: number;
    LocationId?: number;
    ShiftName?: string;
    ShiftStartTime?: string;
    ShiftEndTime?: string;
    UserAgent?: string;
    Insert(res: Response, dto: any): void;
    Update(res: Response, dto: any): void;
    Get(res: any, Id: number): void;
    GetAll(res: any): void;
    getAssignmentByUserId(res: Response, params: AssignmentByUserRequestDTO): void;
    getGuestAssignmentByUserId(res: Response, params: GuestAssignmentByUserRequestDTO): void;
    addNews(res: Response, params: AddNewsRequestDTO): void;
    updateAssignment(res: Response, params: UpdateAssignmentRequestDTO): void;
    getChat(res: Response, params: GetChatRequestDTO): void;
    addChat(res: Response, params: AddChatRequestDTO): void;
    updateGuestAssignment(res: Response, params: UpdateGuestAssignmentRequestDTO): void;
    addEvent(res: Response, params: AddEventRequestDTO): void;
    getUserNotification(res: Response, params: GetUserNotificationRequestDTO): void;
    getUserPointsDetail(res: Response, params: GetUserPointsDetailRequestDTO): void;
    getSuggestedKeywords(res: Response, params: ArchivalMediaRequestDTO): void;
    getArchivalMedia(res: Response, params: ArchivalMediaRequestDTO): void;
    static mapGetUserMetaInfoResponse(metaData: any): UserMetaDataResponseDTO;
}
